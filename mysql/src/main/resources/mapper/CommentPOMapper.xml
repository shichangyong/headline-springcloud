<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.fall.mapper.CommentPOMapper" >
  <resultMap id="BaseResultMap" type="org.fall.entity.po.CommentPO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="source_id" property="sourceId" jdbcType="INTEGER" />
    <result column="target_type" property="targetType" jdbcType="CHAR" />
    <result column="target_id" property="targetId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="replies_number" property="repliesNumber" jdbcType="INTEGER" />
    <result column="likes_number" property="likesNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, source_id, target_type, target_id, content, time, replies_number, likes_number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.fall.entity.po.CommentPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.fall.entity.po.CommentPOExample" >
    delete from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.fall.entity.po.CommentPO" >
    insert into comment (id, source_id, target_type, 
      target_id, content, time, 
      replies_number, likes_number)
    values (#{id,jdbcType=INTEGER}, #{sourceId,jdbcType=INTEGER}, #{targetType,jdbcType=CHAR}, 
      #{targetId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{repliesNumber,jdbcType=INTEGER}, #{likesNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.fall.entity.po.CommentPO" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sourceId != null" >
        source_id,
      </if>
      <if test="targetType != null" >
        target_type,
      </if>
      <if test="targetId != null" >
        target_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="repliesNumber != null" >
        replies_number,
      </if>
      <if test="likesNumber != null" >
        likes_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="targetType != null" >
        #{targetType,jdbcType=CHAR},
      </if>
      <if test="targetId != null" >
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="repliesNumber != null" >
        #{repliesNumber,jdbcType=INTEGER},
      </if>
      <if test="likesNumber != null" >
        #{likesNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.fall.entity.po.CommentPOExample" resultType="java.lang.Integer" >
    select count(*) from comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sourceId != null" >
        source_id = #{record.sourceId,jdbcType=INTEGER},
      </if>
      <if test="record.targetType != null" >
        target_type = #{record.targetType,jdbcType=CHAR},
      </if>
      <if test="record.targetId != null" >
        target_id = #{record.targetId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.repliesNumber != null" >
        replies_number = #{record.repliesNumber,jdbcType=INTEGER},
      </if>
      <if test="record.likesNumber != null" >
        likes_number = #{record.likesNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      source_id = #{record.sourceId,jdbcType=INTEGER},
      target_type = #{record.targetType,jdbcType=CHAR},
      target_id = #{record.targetId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      replies_number = #{record.repliesNumber,jdbcType=INTEGER},
      likes_number = #{record.likesNumber,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.fall.entity.po.CommentPO" >
    update comment
    <set >
      <if test="sourceId != null" >
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="targetType != null" >
        target_type = #{targetType,jdbcType=CHAR},
      </if>
      <if test="targetId != null" >
        target_id = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="repliesNumber != null" >
        replies_number = #{repliesNumber,jdbcType=INTEGER},
      </if>
      <if test="likesNumber != null" >
        likes_number = #{likesNumber,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.fall.entity.po.CommentPO" >
    update comment
    set source_id = #{sourceId,jdbcType=INTEGER},
      target_type = #{targetType,jdbcType=CHAR},
      target_id = #{targetId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      replies_number = #{repliesNumber,jdbcType=INTEGER},
      likes_number = #{likesNumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getByTarget" resultMap="CommentUser" >
    select * from comment
    where target_type = #{targetType} and target_id = #{targetId}
  </select>
  <resultMap id="CommentUser" type="org.fall.entity.dto.CommentDTO">
    <!--association关联属性 property属性名 javaType属性类型 column在多的一方的表中的列名-->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="source_id" property="sourceId" jdbcType="INTEGER" />
    <result column="target_type" property="targetType" jdbcType="CHAR" />
    <result column="target_id" property="targetId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="replies_number" property="repliesNumber" jdbcType="INTEGER" />
    <result column="likes_number" property="likesNumber" jdbcType="INTEGER" />
    <association property="userPO"  column="source_id" javaType="org.fall.entity.po.UserPO" select="getUserPO"/>
  </resultMap>
  <!--
  这里传递过来的id，只有一个属性的时候，下面可以写任何值
  association中column多参数配置：
      column="{key=value,key=value}"
      其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名。
  -->
  <select id="getUserPO" resultMap="UserPOBLOBs">
    select id, phone_number, nickname, password, authentication, head_portrait from user where id = #{id};
  </select>
  <resultMap id="UserPO" type="org.fall.entity.po.UserPO">
    <!--association关联属性 property属性名 javaType属性类型 column在多的一方的表中的列名-->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="authentication" property="authentication" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="UserPOBLOBs" type="org.fall.entity.po.UserPO" extends="BaseResultMap" >
    <result column="head_portrait" property="headPortrait" jdbcType="LONGVARBINARY" />
  </resultMap>

  <update id="addRepliesNumber" parameterType="java.lang.Integer">
    update comment set replies_number=replies_number+1 where id=#{id}
  </update>

</mapper>